{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/fhevm/internal/fhevm.ts"],"sourcesContent":["import { Eip1193Provider, JsonRpcProvider, isAddress } from \"ethers\";\nimport type { FhevmInstance, FhevmInstanceConfig } from \"../types\";\n\ntype FhevmWindowType = typeof window & {\n  relayerSDK: any & { __initialized__?: boolean; SepoliaConfig: any };\n};\n\nconst SDK_CDN_URL =\n  \"https://cdn.zama.ai/relayer-sdk-js/0.2.0/relayer-sdk-js.umd.cjs\";\n\nfunction isFhevmWindowType(w: any): w is FhevmWindowType {\n  return typeof w !== \"undefined\" && w.relayerSDK;\n}\n\nexport const loadSDK = (): Promise<void> =>\n  new Promise((resolve, reject) => {\n    if (isFhevmWindowType(window) && window.relayerSDK) {\n      resolve();\n      return;\n    }\n    const s = document.createElement(\"script\");\n    s.src = SDK_CDN_URL;\n    s.type = \"text/javascript\";\n    s.async = true;\n    s.onload = () => resolve();\n    s.onerror = () => reject(new Error(\"Failed to load Relayer SDK\"));\n    document.head.appendChild(s);\n  });\n\nexport const initSDK = async (): Promise<void> => {\n  if (!isFhevmWindowType(window)) throw new Error(\"window.relayerSDK missing\");\n  if (window.relayerSDK.__initialized__) return;\n  const ok = await window.relayerSDK.initSDK();\n  if (!ok) throw new Error(\"initSDK failed\");\n  window.relayerSDK.__initialized__ = true;\n};\n\nasync function getChainId(providerOrUrl: Eip1193Provider | string): Promise<number> {\n  if (typeof providerOrUrl === \"string\") {\n    const p = new JsonRpcProvider(providerOrUrl);\n    return Number((await p.getNetwork()).chainId);\n  }\n  const hex = (await providerOrUrl.request({ method: \"eth_chainId\" })) as string;\n  return Number.parseInt(hex, 16);\n}\n\nasync function getWeb3Client(rpcUrl: string) {\n  const rpc = new JsonRpcProvider(rpcUrl);\n  const v = await rpc.send(\"web3_clientVersion\", []);\n  await rpc.destroy();\n  return String(v);\n}\n\nasync function tryFetchFHEVMHardhatNodeRelayerMetadata(rpcUrl: string) {\n  const version = await getWeb3Client(rpcUrl);\n  if (!version.toLowerCase().includes(\"hardhat\")) return undefined;\n  const rpc = new JsonRpcProvider(rpcUrl);\n  try {\n    const meta = await rpc.send(\"fhevm_relayer_metadata\", []);\n    return meta as {\n      ACLAddress: `0x${string}`;\n      InputVerifierAddress: `0x${string}`;\n      KMSVerifierAddress: `0x${string}`;\n    };\n  } finally {\n    await rpc.destroy();\n  }\n}\n\ntype ResolveResult =\n  | { isMock: true; chainId: number; rpcUrl: string }\n  | { isMock: false; chainId: number; rpcUrl?: string };\n\nasync function resolve(providerOrUrl: Eip1193Provider | string, mockChains?: Record<number, string>): Promise<ResolveResult> {\n  const chainId = await getChainId(providerOrUrl);\n  let rpcUrl = typeof providerOrUrl === \"string\" ? providerOrUrl : undefined;\n  const defaults = { 31337: \"http://localhost:8545\", ...(mockChains ?? {}) };\n  if (Object.hasOwn(defaults, chainId)) {\n    if (!rpcUrl) rpcUrl = defaults[chainId];\n    return { isMock: true, chainId, rpcUrl: rpcUrl! };\n  }\n  return { isMock: false, chainId, rpcUrl };\n}\n\nexport async function createFhevmInstance(parameters: {\n  provider: Eip1193Provider | string;\n  mockChains?: Record<number, string>;\n}): Promise<FhevmInstance> {\n  const { provider, mockChains } = parameters;\n  const { isMock, rpcUrl } = await resolve(provider, mockChains);\n\n  if (isMock) {\n    const meta = await tryFetchFHEVMHardhatNodeRelayerMetadata(rpcUrl!);\n    if (meta) {\n      const mod = await import(\"./mock/fhevmMock\");\n      return mod.fhevmMockCreateInstance({ rpcUrl: rpcUrl!, chainId: 31337, metadata: meta });\n    }\n  }\n\n  await loadSDK();\n  await initSDK();\n\n  const relayerSDK = (window as unknown as FhevmWindowType).relayerSDK;\n  const cfg = relayerSDK.SepoliaConfig;\n  const config: FhevmInstanceConfig = { ...cfg, network: provider };\n  const instance = await relayerSDK.createInstance(config);\n  return instance as FhevmInstance;\n}\n\n\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAOA,MAAM,cACJ;AAEF,SAAS,kBAAkB,CAAM;IAC/B,OAAO,OAAO,MAAM,eAAe,EAAE,UAAU;AACjD;AAEO,MAAM,UAAU,IACrB,IAAI,QAAQ,CAAC,SAAS;QACpB,IAAI,kBAAkB,WAAW,OAAO,UAAU,EAAE;YAClD;YACA;QACF;QACA,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,GAAG,GAAG;QACR,EAAE,IAAI,GAAG;QACT,EAAE,KAAK,GAAG;QACV,EAAE,MAAM,GAAG,IAAM;QACjB,EAAE,OAAO,GAAG,IAAM,OAAO,IAAI,MAAM;QACnC,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;AAEK,MAAM,UAAU;IACrB,IAAI,CAAC,kBAAkB,SAAS,MAAM,IAAI,MAAM;IAChD,IAAI,OAAO,UAAU,CAAC,eAAe,EAAE;IACvC,MAAM,KAAK,MAAM,OAAO,UAAU,CAAC,OAAO;IAC1C,IAAI,CAAC,IAAI,MAAM,IAAI,MAAM;IACzB,OAAO,UAAU,CAAC,eAAe,GAAG;AACtC;AAEA,eAAe,WAAW,aAAuC;IAC/D,IAAI,OAAO,kBAAkB,UAAU;QACrC,MAAM,IAAI,IAAI,2LAAe,CAAC;QAC9B,OAAO,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,OAAO;IAC9C;IACA,MAAM,MAAO,MAAM,cAAc,OAAO,CAAC;QAAE,QAAQ;IAAc;IACjE,OAAO,OAAO,QAAQ,CAAC,KAAK;AAC9B;AAEA,eAAe,cAAc,MAAc;IACzC,MAAM,MAAM,IAAI,2LAAe,CAAC;IAChC,MAAM,IAAI,MAAM,IAAI,IAAI,CAAC,sBAAsB,EAAE;IACjD,MAAM,IAAI,OAAO;IACjB,OAAO,OAAO;AAChB;AAEA,eAAe,wCAAwC,MAAc;IACnE,MAAM,UAAU,MAAM,cAAc;IACpC,IAAI,CAAC,QAAQ,WAAW,GAAG,QAAQ,CAAC,YAAY,OAAO;IACvD,MAAM,MAAM,IAAI,2LAAe,CAAC;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI,CAAC,0BAA0B,EAAE;QACxD,OAAO;IAKT,SAAU;QACR,MAAM,IAAI,OAAO;IACnB;AACF;AAMA,eAAe,QAAQ,aAAuC,EAAE,UAAmC;IACjG,MAAM,UAAU,MAAM,WAAW;IACjC,IAAI,SAAS,OAAO,kBAAkB,WAAW,gBAAgB;IACjE,MAAM,WAAW;QAAE,OAAO;QAAyB,GAAI,cAAc,CAAC,CAAC;IAAE;IACzE,IAAI,OAAO,MAAM,CAAC,UAAU,UAAU;QACpC,IAAI,CAAC,QAAQ,SAAS,QAAQ,CAAC,QAAQ;QACvC,OAAO;YAAE,QAAQ;YAAM;YAAS,QAAQ;QAAQ;IAClD;IACA,OAAO;QAAE,QAAQ;QAAO;QAAS;IAAO;AAC1C;AAEO,eAAe,oBAAoB,UAGzC;IACC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG;IACjC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,UAAU;IAEnD,IAAI,QAAQ;QACV,MAAM,OAAO,MAAM,wCAAwC;QAC3D,IAAI,MAAM;YACR,MAAM,MAAM;YACZ,OAAO,IAAI,uBAAuB,CAAC;gBAAE,QAAQ;gBAAS,SAAS;gBAAO,UAAU;YAAK;QACvF;IACF;IAEA,MAAM;IACN,MAAM;IAEN,MAAM,aAAa,AAAC,OAAsC,UAAU;IACpE,MAAM,MAAM,WAAW,aAAa;IACpC,MAAM,SAA8B;QAAE,GAAG,GAAG;QAAE,SAAS;IAAS;IAChE,MAAM,WAAW,MAAM,WAAW,cAAc,CAAC;IACjD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/abi/QuizChainABI.ts"],"sourcesContent":["export const QuizChainABI = {\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721IncorrectOwner\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ERC721InsufficientApproval\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"approver\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidApprover\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidOperator\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidOwner\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"receiver\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidReceiver\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidSender\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ERC721NonexistentToken\",\n      \"type\": \"error\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"user\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"quizId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"correct\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"AnswerVerified\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"user\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"NFTClaimed\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"user\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"score\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"QuizCompleted\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"claimNFT\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getEncryptedScore\",\n      \"outputs\": [\n        {\n          \"internalType\": \"euint32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"offset\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"limit\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getPlayers\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"nextTokenId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"protocolId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"quizzes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"answerHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"points\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"scoreThreshold\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"quizId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"answerHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"points\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"setQuiz\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"threshold\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"setScoreThreshold\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"quizId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"answerHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"externalEuint32\",\n          \"name\": \"encryptedPoints\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"inputProof\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"verifyAnswer\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n} as const;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 877, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/abi/QuizChainAddresses.ts"],"sourcesContent":["export const QuizChainAddresses = {\n  \"sepolia\": {\n    \"address\": \"0x8dCfA9b75DC3633456f8Ad28B72b00AA89446E5D\",\n    \"chainName\": \"sepolia\"\n  }\n} as const;\n"],"names":[],"mappings":";;;;AAAO,MAAM,qBAAqB;IAChC,WAAW;QACT,WAAW;QACX,aAAa;IACf;AACF","debugId":null}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { BrowserProvider, Contract, JsonRpcSigner, ethers } from \"ethers\";\nimport { createFhevmInstance } from \"../fhevm/internal/fhevm\";\nimport { QuizChainABI } from \"../abi/QuizChainABI\";\nimport { QuizChainAddresses } from \"../abi/QuizChainAddresses\";\n\nexport default function HomePage() {\n  const [provider, setProvider] = useState<ethers.Eip1193Provider | string | undefined>(undefined);\n  const [signer, setSigner] = useState<JsonRpcSigner | undefined>(undefined);\n  const [address, setAddress] = useState<string | undefined>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [instance, setInstance] = useState<any>(undefined);\n  const [message, setMessage] = useState<string>(\"\");\n  const [scoreHandle, setScoreHandle] = useState<string | undefined>(undefined);\n  const [scoreClear, setScoreClear] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    const w = (window as any).ethereum;\n    if (!w) return;\n    setProvider(w);\n    const bp = new BrowserProvider(w);\n    bp.getSigner().then((s) => setSigner(s));\n    w.request({ method: \"eth_chainId\" }).then((h: string) => setChainId(parseInt(h, 16)));\n    w.request({ method: \"eth_requestAccounts\" }).then(async (accounts: string[]) => {\n      setAddress(accounts?.[0]);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!provider || !chainId) return;\n    createFhevmInstance({ provider, mockChains: { 31337: \"http://localhost:8545\" } })\n      .then((i) => setInstance(i))\n      .catch((e) => setMessage(\"Init FHEVM failed: \" + e.message));\n  }, [provider, chainId]);\n\n  const contractInfo = useMemo(() => {\n    if (!chainId) return undefined as any;\n    const n = chainId === 31337 ? \"localhost\" : chainId === 11155111 ? \"sepolia\" : undefined;\n    if (!n) return undefined as any;\n    const info = (QuizChainAddresses as any)[n];\n    if (!info?.address) return undefined as any;\n    return info;\n  }, [chainId]);\n\n  const contract = useMemo(() => {\n    if (!signer || !contractInfo?.address) return undefined;\n    return new Contract(contractInfo.address, QuizChainABI.abi, signer);\n  }, [signer, contractInfo]);\n\n  const seed = async () => {\n    if (!contract) return;\n    setMessage(\"Seeding...\");\n    // 仅演示：把正确答案哈希写入链上（生产请用硬帽任务）\n    const a = ethers.keccak256(ethers.toUtf8Bytes(\"Vitalik Buterin\"));\n    await (await contract.setQuiz(1, a, 10)).wait();\n    setMessage(\"Seed done\");\n  };\n\n  const answer = async () => {\n    if (!contract || !instance || !address) return;\n    setMessage(\"Answering...\");\n    const ansHash = ethers.keccak256(ethers.toUtf8Bytes(\"Vitalik Buterin\"));\n    const input = instance.createEncryptedInput(contract.target as string, address);\n    input.add32(10); // 题分（可与题库 points 不同，合约内作兜底）\n    const enc = await input.encrypt();\n    const tx = await contract.verifyAnswer(1, ansHash, enc.handles[0], enc.inputProof);\n    await tx.wait();\n    setMessage(\"Answer submitted\");\n  };\n\n  const refreshScoreHandle = async () => {\n    if (!contract) return;\n    const h = await contract.getEncryptedScore();\n    setScoreHandle(h);\n  };\n\n  const decryptScore = async () => {\n    if (!instance || !contract || !scoreHandle || !address) return;\n    setMessage(\"Decrypting...\");\n    // 简化：公共解密或用户解密，这里演示公共解密（若合约开放 getScorePublic，可直接调用只读明文）\n    try {\n      const clear: bigint = await contract.getScorePublic();\n      setScoreClear(clear.toString());\n      setMessage(\"Decrypted\");\n    } catch {\n      setMessage(\"Decrypt failed\");\n    }\n  };\n\n  const claim = async () => {\n    if (!contract) return;\n    setMessage(\"Claiming NFT...\");\n    const tx = await contract.claimNFT();\n    await tx.wait();\n    setMessage(\"Claimed!\");\n  };\n\n  return (\n    <div style={{ padding: 24 }}>\n      <h1>QuizChain</h1>\n      <p>Account: {address}</p>\n      <p>ChainId: {chainId}</p>\n      <p>Status: {message}</p>\n\n      <div style={{ display: \"flex\", gap: 12, marginTop: 12 }}>\n        <button onClick={seed} disabled={!contract}>Seed quizzes</button>\n        <button onClick={answer} disabled={!contract || !instance}>Answer Q1 correctly</button>\n        <button onClick={refreshScoreHandle} disabled={!contract}>Refresh Score Handle</button>\n        <button onClick={decryptScore} disabled={!contract || !instance || !scoreHandle}>Decrypt Score</button>\n        <button onClick={claim} disabled={!contract}>Claim NFT</button>\n      </div>\n\n      <div style={{ marginTop: 12 }}>\n        <p>Score Handle: {String(scoreHandle)}</p>\n        <p>Score Clear: {String(scoreClear)}</p>\n      </div>\n    </div>\n  );\n}\n\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAA8C;IACtF,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAA4B;IAChE,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAqB;IAC3D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAqB;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAM;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAS;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAqB;IACnE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAqB;IAEjE,IAAA,kNAAS,EAAC;QACR,MAAM,IAAI,AAAC,OAAe,QAAQ;QAClC,IAAI,CAAC,GAAG;QACR,YAAY;QACZ,MAAM,KAAK,IAAI,2LAAe,CAAC;QAC/B,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC,IAAM,UAAU;QACrC,EAAE,OAAO,CAAC;YAAE,QAAQ;QAAc,GAAG,IAAI,CAAC,CAAC,IAAc,WAAW,SAAS,GAAG;QAChF,EAAE,OAAO,CAAC;YAAE,QAAQ;QAAsB,GAAG,IAAI,CAAC,OAAO;YACvD,WAAW,UAAU,CAAC,EAAE;QAC1B;IACF,GAAG,EAAE;IAEL,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,YAAY,CAAC,SAAS;QAC3B,IAAA,iJAAmB,EAAC;YAAE;YAAU,YAAY;gBAAE,OAAO;YAAwB;QAAE,GAC5E,IAAI,CAAC,CAAC,IAAM,YAAY,IACxB,KAAK,CAAC,CAAC,IAAM,WAAW,wBAAwB,EAAE,OAAO;IAC9D,GAAG;QAAC;QAAU;KAAQ;IAEtB,MAAM,eAAe,IAAA,gNAAO,EAAC;QAC3B,IAAI,CAAC,SAAS,OAAO;QACrB,MAAM,IAAI,YAAY,QAAQ,cAAc,YAAY,WAAW,YAAY;QAC/E,IAAI,CAAC,GAAG,OAAO;QACf,MAAM,OAAO,AAAC,+IAAkB,AAAQ,CAAC,EAAE;QAC3C,IAAI,CAAC,MAAM,SAAS,OAAO;QAC3B,OAAO;IACT,GAAG;QAAC;KAAQ;IAEZ,MAAM,WAAW,IAAA,gNAAO,EAAC;QACvB,IAAI,CAAC,UAAU,CAAC,cAAc,SAAS,OAAO;QAC9C,OAAO,IAAI,wKAAQ,CAAC,aAAa,OAAO,EAAE,mIAAY,CAAC,GAAG,EAAE;IAC9D,GAAG;QAAC;QAAQ;KAAa;IAEzB,MAAM,OAAO;QACX,IAAI,CAAC,UAAU;QACf,WAAW;QACX,4BAA4B;QAC5B,MAAM,IAAI,0LAAM,CAAC,SAAS,CAAC,0LAAM,CAAC,WAAW,CAAC;QAC9C,MAAM,CAAC,MAAM,SAAS,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI;QAC7C,WAAW;IACb;IAEA,MAAM,SAAS;QACb,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS;QACxC,WAAW;QACX,MAAM,UAAU,0LAAM,CAAC,SAAS,CAAC,0LAAM,CAAC,WAAW,CAAC;QACpD,MAAM,QAAQ,SAAS,oBAAoB,CAAC,SAAS,MAAM,EAAY;QACvE,MAAM,KAAK,CAAC,KAAK,4BAA4B;QAC7C,MAAM,MAAM,MAAM,MAAM,OAAO;QAC/B,MAAM,KAAK,MAAM,SAAS,YAAY,CAAC,GAAG,SAAS,IAAI,OAAO,CAAC,EAAE,EAAE,IAAI,UAAU;QACjF,MAAM,GAAG,IAAI;QACb,WAAW;IACb;IAEA,MAAM,qBAAqB;QACzB,IAAI,CAAC,UAAU;QACf,MAAM,IAAI,MAAM,SAAS,iBAAiB;QAC1C,eAAe;IACjB;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,eAAe,CAAC,SAAS;QACxD,WAAW;QACX,wDAAwD;QACxD,IAAI;YACF,MAAM,QAAgB,MAAM,SAAS,cAAc;YACnD,cAAc,MAAM,QAAQ;YAC5B,WAAW;QACb,EAAE,OAAM;YACN,WAAW;QACb;IACF;IAEA,MAAM,QAAQ;QACZ,IAAI,CAAC,UAAU;QACf,WAAW;QACX,MAAM,KAAK,MAAM,SAAS,QAAQ;QAClC,MAAM,GAAG,IAAI;QACb,WAAW;IACb;IAEA,qBACE,8OAAC;QAAI,OAAO;YAAE,SAAS;QAAG;;0BACxB,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;;oBAAE;oBAAU;;;;;;;0BACb,8OAAC;;oBAAE;oBAAU;;;;;;;0BACb,8OAAC;;oBAAE;oBAAS;;;;;;;0BAEZ,8OAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,KAAK;oBAAI,WAAW;gBAAG;;kCACpD,8OAAC;wBAAO,SAAS;wBAAM,UAAU,CAAC;kCAAU;;;;;;kCAC5C,8OAAC;wBAAO,SAAS;wBAAQ,UAAU,CAAC,YAAY,CAAC;kCAAU;;;;;;kCAC3D,8OAAC;wBAAO,SAAS;wBAAoB,UAAU,CAAC;kCAAU;;;;;;kCAC1D,8OAAC;wBAAO,SAAS;wBAAc,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC;kCAAa;;;;;;kCACjF,8OAAC;wBAAO,SAAS;wBAAO,UAAU,CAAC;kCAAU;;;;;;;;;;;;0BAG/C,8OAAC;gBAAI,OAAO;oBAAE,WAAW;gBAAG;;kCAC1B,8OAAC;;4BAAE;4BAAe,OAAO;;;;;;;kCACzB,8OAAC;;4BAAE;4BAAc,OAAO;;;;;;;;;;;;;;;;;;;AAIhC","debugId":null}}]
}