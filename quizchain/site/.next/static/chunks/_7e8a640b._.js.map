{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/abi/QuizChainABI.ts"],"sourcesContent":["export const QuizChainABI = {\n  \"abi\": [\n    {\n      \"inputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721IncorrectOwner\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ERC721InsufficientApproval\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"approver\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidApprover\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidOperator\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidOwner\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"receiver\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidReceiver\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ERC721InvalidSender\",\n      \"type\": \"error\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ERC721NonexistentToken\",\n      \"type\": \"error\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"user\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"quizId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"correct\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"AnswerVerified\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"user\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"NFTClaimed\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"user\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"score\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"timestamp\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"QuizCompleted\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"claimNFT\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getEncryptedScore\",\n      \"outputs\": [\n        {\n          \"internalType\": \"euint32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"offset\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"limit\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getPlayers\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"nextTokenId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"protocolId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"quizzes\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"answerHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"points\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"scoreThreshold\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"quizId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"answerHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"points\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"setQuiz\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"quizIds\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"bytes32[]\",\n          \"name\": \"answerHashes\",\n          \"type\": \"bytes32[]\"\n        },\n        {\n          \"internalType\": \"uint32[]\",\n          \"name\": \"points\",\n          \"type\": \"uint32[]\"\n        }\n      ],\n      \"name\": \"setQuizzes\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint32\",\n          \"name\": \"threshold\",\n          \"type\": \"uint32\"\n        }\n      ],\n      \"name\": \"setScoreThreshold\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"quizId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"answerHash\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"externalEuint32\",\n          \"name\": \"encryptedPoints\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"inputProof\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"verifyAnswer\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n} as const;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/abi/QuizChainAddresses.ts"],"sourcesContent":["export const QuizChainAddresses = {\n  \"sepolia\": {\n    \"address\": \"0xbbF76887163A21F90fcBfcc942a56036953d28A5\",\n    \"chainName\": \"sepolia\"\n  }\n} as const;\n"],"names":[],"mappings":";;;;AAAO,MAAM,qBAAqB;IAChC,WAAW;QACT,WAAW;QACX,aAAa;IACf;AACF","debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/fhevm/internal/fhevm.ts"],"sourcesContent":["import { Eip1193Provider, JsonRpcProvider, isAddress } from \"ethers\";\nimport type { FhevmInstance, FhevmInstanceConfig } from \"../types\";\n\ntype FhevmWindowType = typeof window & {\n  relayerSDK: any & { __initialized__?: boolean; SepoliaConfig: any };\n};\n\nconst SDK_CDN_URL =\n  \"https://cdn.zama.ai/relayer-sdk-js/0.2.0/relayer-sdk-js.umd.cjs\";\n\nfunction isFhevmWindowType(w: any): w is FhevmWindowType {\n  return typeof w !== \"undefined\" && w.relayerSDK;\n}\n\nexport const loadSDK = (): Promise<void> =>\n  new Promise((resolve, reject) => {\n    if (isFhevmWindowType(window) && window.relayerSDK) {\n      resolve();\n      return;\n    }\n    const s = document.createElement(\"script\");\n    s.src = SDK_CDN_URL;\n    s.type = \"text/javascript\";\n    s.async = true;\n    s.onload = () => resolve();\n    s.onerror = () => reject(new Error(\"Failed to load Relayer SDK\"));\n    document.head.appendChild(s);\n  });\n\nexport const initSDK = async (): Promise<void> => {\n  if (!isFhevmWindowType(window)) throw new Error(\"window.relayerSDK missing\");\n  if (window.relayerSDK.__initialized__) return;\n  const ok = await window.relayerSDK.initSDK();\n  if (!ok) throw new Error(\"initSDK failed\");\n  window.relayerSDK.__initialized__ = true;\n};\n\nasync function getChainId(providerOrUrl: Eip1193Provider | string): Promise<number> {\n  if (typeof providerOrUrl === \"string\") {\n    const p = new JsonRpcProvider(providerOrUrl);\n    return Number((await p.getNetwork()).chainId);\n  }\n  const hex = (await providerOrUrl.request({ method: \"eth_chainId\" })) as string;\n  return Number.parseInt(hex, 16);\n}\n\nasync function getWeb3Client(rpcUrl: string) {\n  const rpc = new JsonRpcProvider(rpcUrl);\n  const v = await rpc.send(\"web3_clientVersion\", []);\n  await rpc.destroy();\n  return String(v);\n}\n\nasync function tryFetchFHEVMHardhatNodeRelayerMetadata(rpcUrl: string) {\n  const version = await getWeb3Client(rpcUrl);\n  if (!version.toLowerCase().includes(\"hardhat\")) return undefined;\n  const rpc = new JsonRpcProvider(rpcUrl);\n  try {\n    const meta = await rpc.send(\"fhevm_relayer_metadata\", []);\n    return meta as {\n      ACLAddress: `0x${string}`;\n      InputVerifierAddress: `0x${string}`;\n      KMSVerifierAddress: `0x${string}`;\n    };\n  } finally {\n    await rpc.destroy();\n  }\n}\n\ntype ResolveResult =\n  | { isMock: true; chainId: number; rpcUrl: string }\n  | { isMock: false; chainId: number; rpcUrl?: string };\n\nasync function resolve(providerOrUrl: Eip1193Provider | string, mockChains?: Record<number, string>): Promise<ResolveResult> {\n  const chainId = await getChainId(providerOrUrl);\n  let rpcUrl = typeof providerOrUrl === \"string\" ? providerOrUrl : undefined;\n  const defaults = { 31337: \"http://localhost:8545\", ...(mockChains ?? {}) };\n  if (Object.hasOwn(defaults, chainId)) {\n    if (!rpcUrl) rpcUrl = defaults[chainId];\n    return { isMock: true, chainId, rpcUrl: rpcUrl! };\n  }\n  return { isMock: false, chainId, rpcUrl };\n}\n\nexport async function createFhevmInstance(parameters: {\n  provider: Eip1193Provider | string;\n  mockChains?: Record<number, string>;\n}): Promise<FhevmInstance> {\n  const { provider, mockChains } = parameters;\n  const { isMock, rpcUrl } = await resolve(provider, mockChains);\n\n  if (isMock) {\n    const meta = await tryFetchFHEVMHardhatNodeRelayerMetadata(rpcUrl!);\n    if (meta) {\n      const mod = await import(\"./mock/fhevmMock\");\n      return mod.fhevmMockCreateInstance({ rpcUrl: rpcUrl!, chainId: 31337, metadata: meta });\n    }\n  }\n\n  await loadSDK();\n  await initSDK();\n\n  const relayerSDK = (window as unknown as FhevmWindowType).relayerSDK;\n  const cfg = relayerSDK.SepoliaConfig;\n  const config: FhevmInstanceConfig = { ...cfg, network: provider };\n  const instance = await relayerSDK.createInstance(config);\n  return instance as FhevmInstance;\n}\n\n\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAOA,MAAM,cACJ;AAEF,SAAS,kBAAkB,CAAM;IAC/B,OAAO,OAAO,MAAM,eAAe,EAAE,UAAU;AACjD;AAEO,MAAM,UAAU,IACrB,IAAI,QAAQ,CAAC,SAAS;QACpB,IAAI,kBAAkB,WAAW,OAAO,UAAU,EAAE;YAClD;YACA;QACF;QACA,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,GAAG,GAAG;QACR,EAAE,IAAI,GAAG;QACT,EAAE,KAAK,GAAG;QACV,EAAE,MAAM,GAAG,IAAM;QACjB,EAAE,OAAO,GAAG,IAAM,OAAO,IAAI,MAAM;QACnC,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;AAEK,MAAM,UAAU;IACrB,IAAI,CAAC,kBAAkB,SAAS,MAAM,IAAI,MAAM;IAChD,IAAI,OAAO,UAAU,CAAC,eAAe,EAAE;IACvC,MAAM,KAAK,MAAM,OAAO,UAAU,CAAC,OAAO;IAC1C,IAAI,CAAC,IAAI,MAAM,IAAI,MAAM;IACzB,OAAO,UAAU,CAAC,eAAe,GAAG;AACtC;AAEA,eAAe,WAAW,aAAuC;IAC/D,IAAI,OAAO,kBAAkB,UAAU;QACrC,MAAM,IAAI,IAAI,8LAAe,CAAC;QAC9B,OAAO,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,OAAO;IAC9C;IACA,MAAM,MAAO,MAAM,cAAc,OAAO,CAAC;QAAE,QAAQ;IAAc;IACjE,OAAO,OAAO,QAAQ,CAAC,KAAK;AAC9B;AAEA,eAAe,cAAc,MAAc;IACzC,MAAM,MAAM,IAAI,8LAAe,CAAC;IAChC,MAAM,IAAI,MAAM,IAAI,IAAI,CAAC,sBAAsB,EAAE;IACjD,MAAM,IAAI,OAAO;IACjB,OAAO,OAAO;AAChB;AAEA,eAAe,wCAAwC,MAAc;IACnE,MAAM,UAAU,MAAM,cAAc;IACpC,IAAI,CAAC,QAAQ,WAAW,GAAG,QAAQ,CAAC,YAAY,OAAO;IACvD,MAAM,MAAM,IAAI,8LAAe,CAAC;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI,CAAC,0BAA0B,EAAE;QACxD,OAAO;IAKT,SAAU;QACR,MAAM,IAAI,OAAO;IACnB;AACF;AAMA,eAAe,QAAQ,aAAuC,EAAE,UAAmC;IACjG,MAAM,UAAU,MAAM,WAAW;IACjC,IAAI,SAAS,OAAO,kBAAkB,WAAW,gBAAgB;IACjE,MAAM,WAAW;QAAE,OAAO;QAAyB,GAAI,uBAAA,wBAAA,aAAc,CAAC,CAAC;IAAE;IACzE,IAAI,OAAO,MAAM,CAAC,UAAU,UAAU;QACpC,IAAI,CAAC,QAAQ,SAAS,QAAQ,CAAC,QAAQ;QACvC,OAAO;YAAE,QAAQ;YAAM;YAAS,QAAQ;QAAQ;IAClD;IACA,OAAO;QAAE,QAAQ;QAAO;QAAS;IAAO;AAC1C;AAEO,eAAe,oBAAoB,UAGzC;IACC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG;IACjC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,UAAU;IAEnD,IAAI,QAAQ;QACV,MAAM,OAAO,MAAM,wCAAwC;QAC3D,IAAI,MAAM;YACR,MAAM,MAAM;YACZ,OAAO,IAAI,uBAAuB,CAAC;gBAAE,QAAQ;gBAAS,SAAS;gBAAO,UAAU;YAAK;QACvF;IACF;IAEA,MAAM;IACN,MAAM;IAEN,MAAM,aAAa,AAAC,OAAsC,UAAU;IACpE,MAAM,MAAM,WAAW,aAAa;IACpC,MAAM,SAA8B;QAAE,GAAG,GAAG;QAAE,SAAS;IAAS;IAChE,MAAM,WAAW,MAAM,WAAW,cAAc,CAAC;IACjD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/hooks/quizBank.ts"],"sourcesContent":["import { keccak256, toUtf8Bytes } from \"ethers\";\n\nconst QUESTION_ID_BITS = 32n;\nconst QUESTION_ID_MASK = (1n << QUESTION_ID_BITS) - 1n;\nconst BANK_ID_BITS = 224n; // 256 - 32\nconst BANK_ID_MASK = (1n << BANK_ID_BITS) - 1n;\n\nexport function deriveBankIdFromCid(cid: string): bigint {\n  const hex = keccak256(toUtf8Bytes(cid));\n  // 只保留低 224 位，避免左移 32 位后溢出 uint256\n  return BigInt(hex) & BANK_ID_MASK;\n}\n\nexport function makeCompositeId(bankId: bigint, questionId: number): bigint {\n  const bank224 = bankId & BANK_ID_MASK;\n  return (bank224 << QUESTION_ID_BITS) | BigInt(questionId >>> 0);\n}\n\nexport function makeCompositeIdFromCidAndQuestion(cid: string, questionId: number): bigint {\n  const bank = deriveBankIdFromCid(cid);\n  return makeCompositeId(bank, questionId);\n}\n\nexport function splitCompositeId(id: bigint): { bankId: bigint; questionId: number } {\n  const q = Number(id & QUESTION_ID_MASK);\n  const b = id >> QUESTION_ID_BITS;\n  return { bankId: b, questionId: q };\n}\n\nexport function shortHex(bi: bigint, len = 8): string {\n  const hex = bi.toString(16);\n  const h = hex.length > len ? hex.slice(0, len) + \"…\" : hex;\n  return \"0x\" + h;\n}\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAAA;;AAEA,MAAM,mBAAmB,GAAG;AAC5B,MAAM,mBAAmB,CAAC,EAAE,IAAI,gBAAgB,IAAI,EAAE;AACtD,MAAM,eAAe,IAAI,EAAE,WAAW;AACtC,MAAM,eAAe,CAAC,EAAE,IAAI,YAAY,IAAI,EAAE;AAEvC,SAAS,oBAAoB,GAAW;IAC7C,MAAM,MAAM,IAAA,wKAAS,EAAC,IAAA,uKAAW,EAAC;IAClC,kCAAkC;IAClC,OAAO,OAAO,OAAO;AACvB;AAEO,SAAS,gBAAgB,MAAc,EAAE,UAAkB;IAChE,MAAM,UAAU,SAAS;IACzB,OAAO,AAAC,WAAW,mBAAoB,OAAO,eAAe;AAC/D;AAEO,SAAS,kCAAkC,GAAW,EAAE,UAAkB;IAC/E,MAAM,OAAO,oBAAoB;IACjC,OAAO,gBAAgB,MAAM;AAC/B;AAEO,SAAS,iBAAiB,EAAU;IACzC,MAAM,IAAI,OAAO,KAAK;IACtB,MAAM,IAAI,MAAM;IAChB,OAAO;QAAE,QAAQ;QAAG,YAAY;IAAE;AACpC;AAEO,SAAS,SAAS,EAAU;QAAE,MAAA,iEAAM;IACzC,MAAM,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,IAAI,IAAI,MAAM,GAAG,MAAM,IAAI,KAAK,CAAC,GAAG,OAAO,MAAM;IACvD,OAAO,OAAO;AAChB","debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/app/records/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { BrowserProvider, Contract, JsonRpcSigner, ethers } from \"ethers\";\nimport { QuizChainABI } from \"../../abi/QuizChainABI\";\nimport { QuizChainAddresses } from \"../../abi/QuizChainAddresses\";\nimport { createFhevmInstance } from \"../../fhevm/internal/fhevm\";\nimport { splitCompositeId, shortHex } from \"../../hooks/quizBank\";\n\ntype MyRecord = {\n  quizId: bigint;\n  correct: boolean;\n  txHash: string;\n  blockNumber: number;\n  timestamp?: number;\n};\n\nexport default function RecordsPage() {\n  const [signer, setSigner] = useState<JsonRpcSigner | undefined>(undefined);\n  const [address, setAddress] = useState<string | undefined>(undefined);\n  const [chainId, setChainId] = useState<number | undefined>(undefined);\n  const [instance, setInstance] = useState<any>(undefined);\n  const [loading, setLoading] = useState(false);\n  const [rows, setRows] = useState<MyRecord[]>([]);\n  const [scoreHandle, setScoreHandle] = useState<string | undefined>(undefined);\n  const [scoreClear, setScoreClear] = useState<string | undefined>(undefined);\n  const [message, setMessage] = useState<string>(\"\");\n  const [revealed, setRevealed] = useState<boolean>(false);\n\n  useEffect(() => {\n    const w = (window as any).ethereum;\n    if (!w) return;\n    const bp = new BrowserProvider(w);\n    bp.getSigner().then(async (s) => {\n      setSigner(s);\n      setAddress(await s.getAddress());\n    });\n    w.request({ method: \"eth_chainId\" }).then((h: string) => setChainId(parseInt(h, 16)));\n  }, []);\n\n  useEffect(() => {\n    if (!chainId) return;\n    const w = (window as any).ethereum;\n    if (!w) return;\n    createFhevmInstance({ provider: w, mockChains: { 31337: \"http://localhost:8545\" } })\n      .then((i) => setInstance(i))\n      .catch((e) => setMessage(\"Init FHEVM failed: \" + e?.message));\n  }, [chainId]);\n\n  const contractInfo = useMemo(() => {\n    if (!chainId) return undefined as any;\n    const n = chainId === 31337 ? \"localhost\" : chainId === 11155111 ? \"sepolia\" : undefined;\n    if (!n) return undefined as any;\n    const info = (QuizChainAddresses as any)[n];\n    if (!info?.address) return undefined as any;\n    return info;\n  }, [chainId]);\n\n  const contract = useMemo(() => {\n    if (!signer || !contractInfo?.address) return undefined;\n    return new Contract(contractInfo.address, QuizChainABI.abi, signer);\n  }, [signer, contractInfo]);\n\n  const refreshRecords = useCallback(async () => {\n    if (!contract || !address) return;\n    setLoading(true);\n    try {\n      const filter = (contract as any).filters.AnswerVerified(address);\n      const latest = await contract.runner!.provider!.getBlockNumber();\n      const fromBlock = Math.max(0, latest - 200000); // 最近约20万块\n      const logs = await contract.queryFilter(filter, fromBlock, latest);\n      const items: MyRecord[] = logs.map((l: any) => ({\n        quizId: l.args[1] as bigint,\n        correct: Boolean(l.args[2]),\n        txHash: l.transactionHash,\n        blockNumber: l.blockNumber,\n      }));\n      // 附带区块时间\n      const provider = contract.runner!.provider!;\n      for (const it of items) {\n        const b = await provider.getBlock(it.blockNumber);\n        it.timestamp = Number(b?.timestamp ?? 0);\n      }\n      items.sort((a, b) => b.blockNumber - a.blockNumber);\n      setRows(items);\n    } catch (e: any) {\n      setMessage(\"读取事件失败: \" + e?.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [contract, address]);\n\n  const loadScoreHandle = useCallback(async () => {\n    if (!contract) return;\n    try {\n      const h: string = await (contract as any).getEncryptedScore();\n      setScoreHandle(h);\n    } catch (e: any) {\n      setMessage(\"读取加密分数失败: \" + e?.message);\n    }\n  }, [contract]);\n\n  const decryptScore = useCallback(async () => {\n    if (!instance || !signer || !contractInfo?.address || !scoreHandle) return;\n    try {\n      setMessage(\"正在发起解密签名...\");\n      const userAddress = await signer.getAddress();\n      const relayer: any = instance;\n      const { publicKey, privateKey } = relayer.generateKeypair();\n      const startTs = Math.floor(Date.now() / 1000);\n      const durationDays = 365;\n      const eip712 = relayer.createEIP712(\n        publicKey,\n        [contractInfo.address],\n        startTs,\n        durationDays\n      );\n      const signature = await signer.signTypedData(\n        eip712.domain,\n        { UserDecryptRequestVerification: eip712.types.UserDecryptRequestVerification },\n        eip712.message\n      );\n      setMessage(\"调用 Relayer 解密中...\");\n      const res = await relayer.userDecrypt(\n        [{ handle: scoreHandle, contractAddress: contractInfo.address }],\n        privateKey,\n        publicKey,\n        signature,\n        [contractInfo.address],\n        userAddress,\n        startTs,\n        durationDays\n      );\n      const v = res[scoreHandle];\n      setScoreClear(String(v));\n      setMessage(\"解密成功\");\n      setRevealed(true);\n    } catch (e: any) {\n      setMessage(\"解密失败: \" + e?.message);\n    }\n  }, [instance, signer, contractInfo, scoreHandle]);\n\n  useEffect(() => {\n    if (contract) {\n      refreshRecords();\n      loadScoreHandle();\n    }\n  }, [contract, refreshRecords, loadScoreHandle]);\n\n  const fmtTime = (ts?: number) =>\n    ts ? new Date(ts * 1000).toLocaleString() : \"-\";\n\n  return (\n    <div style={{ minHeight: \"100vh\", padding: \"40px 20px\" }}>\n      <div style={{ maxWidth: 1100, margin: \"0 auto\", display: \"grid\", gap: 20 }}>\n        <h1 className=\"neon-text\" style={{ fontSize: 44, textAlign: \"center\" }}>📘 我的答题记录</h1>\n\n        {/* 顶部信息 */}\n        <div className=\"card\" style={{ display: \"grid\", gap: 10 }}>\n          <div>\n            <span style={{ opacity: 0.7 }}>钱包地址: </span>\n            <span style={{ fontFamily: \"monospace\", color: \"#00E0FF\" }}>{address ? `${address.slice(0, 6)}...${address.slice(-4)}` : \"未连接\"}</span>\n          </div>\n          <div>\n            <span style={{ opacity: 0.7 }}>网络: </span>\n            <span style={{ color: \"#00E0FF\" }}>{chainId === 11155111 ? \"Sepolia\" : chainId === 31337 ? \"Localhost\" : chainId}</span>\n          </div>\n          <div>\n            <span style={{ opacity: 0.7 }}>合约地址: </span>\n            <span style={{ fontFamily: \"monospace\", color: \"#00E0FF\" }}>{contractInfo?.address || \"未部署\"}</span>\n          </div>\n        </div>\n\n        {/* 分数解密 */}\n        <div className=\"card\" style={{ display: \"grid\", gap: 12 }}>\n          <h2 style={{ fontSize: 20, color: \"#00E0FF\" }}>🔐 我的分数</h2>\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: 12 }}>\n            <div className=\"neon-text\" style={{ fontSize: 40, fontWeight: 900 }}>{scoreClear ?? \"-\"}</div>\n            <div style={{ color: \"#888\" }}>（密文句柄: {scoreHandle ? `${scoreHandle.slice(0, 10)}...` : \"-\"}）</div>\n          </div>\n          <div style={{ display: \"flex\", gap: 12 }}>\n            <button className=\"neon-button\" onClick={loadScoreHandle} disabled={!contract}>刷新句柄</button>\n            <button className=\"neon-button\" onClick={decryptScore} disabled={!instance || !scoreHandle}>解密并查看分数</button>\n          </div>\n          {!revealed && (\n            <div style={{ color: \"#9aa3b2\" }}>提示：未解密前，下面每题的正确/错误状态将被隐藏。</div>\n          )}\n        </div>\n\n        {/* 事件列表（按题库分组） */}\n        <div className=\"card\" style={{ padding: 0 }}>\n          <div style={{ padding: 20, borderBottom: \"1px solid rgba(255,255,255,0.1)\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n            <h2 style={{ fontSize: 20, color: \"#00E0FF\" }}>🧾 答题事件（按题库）</h2>\n            <button className=\"neon-button\" onClick={refreshRecords} disabled={!contract || loading}>{loading ? \"刷新中...\" : \"刷新\"}</button>\n          </div>\n          {rows.length === 0 ? (\n            <div style={{ padding: 40, textAlign: \"center\", color: \"#999\" }}>暂无记录</div>\n          ) : (\n            <div style={{ display: \"grid\" }}>\n              {(() => {\n                // 汇总每个题库的分数与条目\n                const bankMap = new Map<string, { bankId: bigint; score: number; items: MyRecord[] }>();\n                for (const r of rows) {\n                  const { bankId } = splitCompositeId(r.quizId);\n                  const key = bankId.toString();\n                  if (!bankMap.has(key)) bankMap.set(key, { bankId, score: 0, items: [] });\n                  const entry = bankMap.get(key)!;\n                  entry.items.push(r);\n                  if (r.correct) entry.score += 10; // 与前端题目加分保持一致\n                }\n                const groups = Array.from(bankMap.values()).sort((a, b) => b.score - a.score);\n                return groups.map((g, gi) => (\n                  <div key={g.bankId.toString()} style={{ borderTop: gi === 0 ? \"none\" : \"1px solid rgba(255,255,255,0.08)\" }}>\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: \"16px 20px\" }}>\n                      <div>\n                        <span style={{ opacity: 0.8 }}>题库</span> <span style={{ fontFamily: \"monospace\", color: \"#00E0FF\" }}>{shortHex(g.bankId)}</span>\n                      </div>\n                      <div className=\"neon-text\" style={{ fontSize: 24, fontWeight: 900 }}>{revealed ? g.score : \"🔒\"}</div>\n                    </div>\n                    {g.items.map((r, i) => (\n                      <div key={`${r.txHash}-${i}`} style={{ display: \"grid\", gridTemplateColumns: \"160px 1fr 220px 220px\", padding: \"12px 20px\", borderTop: \"1px dashed rgba(255,255,255,0.06)\" }}>\n                        <div style={{ fontFamily: \"monospace\", color: \"#bbb\" }}>#{String(r.blockNumber)}</div>\n                        {(() => {\n                          const { questionId } = splitCompositeId(r.quizId);\n                          return (\n                            <div>\n                              题目ID: <span className=\"neon-text\" style={{ fontWeight: 700 }}>{questionId}</span>\n                            </div>\n                          );\n                        })()}\n                        {revealed ? (\n                          <div style={{ color: r.correct ? \"#00E676\" : \"#ff6b6b\", fontWeight: 700 }}>{r.correct ? \"✅ 正确\" : \"❌ 错误\"}</div>\n                        ) : (\n                          <div style={{ color: \"#aaa\", fontWeight: 700 }}>🔒 加密</div>\n                        )}\n                        <div style={{ color: \"#aaa\" }}>{fmtTime(r.timestamp)}</div>\n                      </div>\n                    ))}\n                  </div>\n                ));\n              })()}\n            </div>\n          )}\n        </div>\n\n        {message && (\n          <div className=\"card\" style={{ background: \"rgba(0, 224, 255, 0.08)\" }}>{message}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}