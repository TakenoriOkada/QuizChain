{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/toolboxb/Desktop/ZAMA/%E5%8D%81%E6%9C%88%E9%A1%B9%E7%9B%AE/%E7%AD%94%E9%A2%98%E6%B8%B8%E6%88%8F/action/quizchain/site/fhevm/internal/mock/fhevmMock.ts"],"sourcesContent":["//////////////////////////////////////////////////////////////////////////\n// WARNING: dynamically import this file only in mock mode\n//////////////////////////////////////////////////////////////////////////\nimport { JsonRpcProvider } from \"ethers\";\nimport { MockFhevmInstance } from \"@fhevm/mock-utils\";\nimport { FhevmInstance } from \"../../types\";\n\nexport const fhevmMockCreateInstance = async (parameters: {\n  rpcUrl: string;\n  chainId: number;\n  metadata: {\n    ACLAddress: `0x${string}`;\n    InputVerifierAddress: `0x${string}`;\n    KMSVerifierAddress: `0x${string}`;\n  };\n}): Promise<FhevmInstance> => {\n  const provider = new JsonRpcProvider(parameters.rpcUrl);\n  const instance = await MockFhevmInstance.create(provider, provider, {\n    aclContractAddress: parameters.metadata.ACLAddress,\n    chainId: parameters.chainId,\n    gatewayChainId: 55815,\n    inputVerifierContractAddress: parameters.metadata.InputVerifierAddress,\n    kmsContractAddress: parameters.metadata.KMSVerifierAddress,\n    verifyingContractAddressDecryption: \"0x5ffdaAB0373E62E2ea2944776209aEf29E631A64\",\n    verifyingContractAddressInputVerification: \"0x812b06e1CDCE800494b79fFE4f925A504a9A9810\",\n  });\n  return instance;\n};\n\n\n"],"names":[],"mappings":"AAAA,0EAA0E;AAC1E,0DAA0D;AAC1D,0EAA0E;;;;;AAC1E;AACA;;;AAGO,MAAM,0BAA0B,OAAO;IAS5C,MAAM,WAAW,IAAI,8LAAe,CAAC,WAAW,MAAM;IACtD,MAAM,WAAW,MAAM,sMAAiB,CAAC,MAAM,CAAC,UAAU,UAAU;QAClE,oBAAoB,WAAW,QAAQ,CAAC,UAAU;QAClD,SAAS,WAAW,OAAO;QAC3B,gBAAgB;QAChB,8BAA8B,WAAW,QAAQ,CAAC,oBAAoB;QACtE,oBAAoB,WAAW,QAAQ,CAAC,kBAAkB;QAC1D,oCAAoC;QACpC,2CAA2C;IAC7C;IACA,OAAO;AACT","debugId":null}}]
}