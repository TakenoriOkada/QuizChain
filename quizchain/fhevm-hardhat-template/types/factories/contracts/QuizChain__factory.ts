/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { QuizChain, QuizChainInterface } from "../../contracts/QuizChain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "quizId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "correct",
        type: "bool",
      },
    ],
    name: "AnswerVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NFTClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "QuizCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedScore",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "quizzes",
    outputs: [
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "points",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scoreThreshold",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quizId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "points",
        type: "uint32",
      },
    ],
    name: "setQuiz",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "quizIds",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "answerHashes",
        type: "bytes32[]",
      },
      {
        internalType: "uint32[]",
        name: "points",
        type: "uint32[]",
      },
    ],
    name: "setQuizzes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "threshold",
        type: "uint32",
      },
    ],
    name: "setScoreThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quizId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
      {
        internalType: "externalEuint32",
        name: "encryptedPoints",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "verifyAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600a55600b805463ffffffff19166064179055348015610024575f5ffd5b506040518060400160405280600c81526020016b145d5a5e90da185a5b93919560a21b8152506040518060400160405280600481526020016328aaa4ad60e11b81525061015461007861017460201b60201c565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f61015f83826102a4565b50600161016c82826102a4565b50505061035e565b604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061023457607f821691505b60208210810361025257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561029f57805f5260205f20601f840160051c8101602085101561027d5750805b601f840160051c820191505b8181101561029c575f8155600101610289565b50505b505050565b81516001600160401b038111156102bd576102bd61020c565b6102d1816102cb8454610220565b84610258565b6020601f821160018114610303575f83156102ec5750848201515b5f19600385901b1c1916600184901b17845561029c565b5f84815260208120601f198516915b828110156103325787850151825560209485019460019092019101610312565b508482101561034f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b611f3f8061036b5f395ff3fe608060405234801561000f575f5ffd5b506004361061018f575f3560e01c806370a08231116100dd578063b56951d411610088578063c87b56dd11610063578063c87b56dd146103a7578063da1f12ab146103ba578063e985e9c5146103c2575f5ffd5b8063b56951d41461036e578063b88d4fde14610381578063c590eb0914610394575f5ffd5b806395d89b41116100b857806395d89b41146103295780639ee4982a14610331578063a22cb4651461035b575f5ffd5b806370a08231146102c757806375794a3c146102da57806388409afa146102e3575f5ffd5b806323b872dd1161013d5780636352211e116101185780636352211e1461028757806365ee9f621461029a578063672756ad146102bf575f5ffd5b806323b872dd1461024e5780633f4325bb1461026157806342842e0e14610274575f5ffd5b8063095ea7b31161016d578063095ea7b3146101fb5780630a9981e8146102105780630d2dce221461022e575f5ffd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0575b5f5ffd5b6101a66101a13660046118fd565b6103fd565b60405190151581526020015b60405180910390f35b6101c361044e565b6040516101b29190611946565b6101e36101de366004611958565b6104dd565b6040516001600160a01b0390911681526020016101b2565b61020e61020936600461198a565b610504565b005b335f908152600760205260409020545b6040519081526020016101b2565b61024161023c3660046119b2565b610513565b6040516101b291906119d2565b61020e61025c366004611a1d565b61061e565b61020e61026f366004611a57565b6106ac565b61020e610282366004611a1d565b6108b8565b6101e3610295366004611958565b6108d7565b600b546102aa9063ffffffff1681565b60405163ffffffff90911681526020016101b2565b61020e6108e1565b6102206102d5366004611ade565b610978565b610220600a5481565b61030f6102f1366004611958565b60066020525f90815260409020805460019091015463ffffffff1682565b6040805192835263ffffffff9091166020830152016101b2565b6101c36109bd565b61020e61033f366004611b0a565b600b805463ffffffff191663ffffffff92909216919091179055565b61020e610369366004611b23565b6109cc565b61020e61037c366004611ba4565b6109d7565b61020e61038f366004611c57565b610b4b565b61020e6103a2366004611d34565b610b63565b6101c36103b5366004611958565b610be2565b612711610220565b6101a66103d0366004611d66565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b031982166380ac58cd60e01b148061042d57506001600160e01b03198216635b5e139f60e01b145b8061044857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461045c90611d97565b80601f016020809104026020016040519081016040528092919081815260200182805461048890611d97565b80156104d35780601f106104aa576101008083540402835291602001916104d3565b820191905f5260205f20905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b5f6104e782610c53565b505f828152600460205260409020546001600160a01b0316610448565b61050f828233610c8b565b5050565b600854606090808410610535575050604080515f815260208101909152610448565b5f6105408486611de3565b90508181111561054d5750805b5f6105588683611df6565b90505f8167ffffffffffffffff81111561057457610574611c43565b60405190808252806020026020018201604052801561059d578160200160208202803683370190505b5090505f5b828110156106135760086105b6828a611de3565b815481106105c6576105c6611e09565b905f5260205f20015f9054906101000a90046001600160a01b03168282815181106105f3576105f3611e09565b6001600160a01b03909216602092830291909101909101526001016105a2565b509695505050505050565b6001600160a01b03821661064c57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f610658838333610c98565b9050836001600160a01b0316816001600160a01b0316146106a6576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610643565b50505050565b5f858152600660209081526040918290208251808401909352805480845260019091015463ffffffff16918301919091526107295760405162461bcd60e51b815260206004820152600e60248201527f7175697a206e6f7420666f756e640000000000000000000000000000000000006044820152606401610643565b805160405190861480825290879033907f3d777982c4d9dc82be1b8b8046a9c5ace46f39b9d2369fb336f7f80870b1d0309060200160405180910390a3806107725750506108b1565b5f6107b28686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610d9792505050565b90505f6107dd6107ca836107c55f610da4565b610db6565b6107d78660200151610da4565b84610de4565b335f908152600760205260409020549091506107f99082610df8565b335f90815260076020526040902081905561081390610e26565b50335f8181526007602052604090205461082c91610e35565b50335f9081526009602052604090205460ff166108ac57335f818152600960205260408120805460ff191660019081179091556008805491820181559091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff191690911790555b505050505b5050505050565b6108d283838360405180602001604052805f815250610b4b565b505050565b5f61044882610c53565b600a80545f91826108f183611e1d565b9190505590506109013382610e47565b6040805182815242602082015233917fd93bbb9e10b7af5aa4b410ac845ae87a717d305e8a4777959ad1dd06e6a1ac98910160405180910390a2604080515f815242602082015233917fb19db0da2fcbedc9057d111843a97780e1d3334a38f64062e8f5f5871544379f910160405180910390a250565b5f6001600160a01b0382166109a2576040516322718ad960e21b81525f6004820152602401610643565b506001600160a01b03165f9081526003602052604090205490565b60606001805461045c90611d97565b61050f338383610e60565b8483811480156109e657508082145b610a325760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d6174636800000000000000000000000000000000006044820152606401610643565b5f5b81811015610b41575f868683818110610a4f57610a4f611e09565b9050602002013503610a925760405162461bcd60e51b815260206004820152600c60248201526b0d2dcecc2d8d2c840d0c2e6d60a31b6044820152606401610643565b6040518060400160405280878784818110610aaf57610aaf611e09565b905060200201358152602001858584818110610acd57610acd611e09565b9050602002016020810190610ae29190611b0a565b63ffffffff16905260065f8a8a85818110610aff57610aff611e09565b60209081029290920135835250818101929092526040015f20825181559101516001918201805463ffffffff191663ffffffff90921691909117905501610a34565b5050505050505050565b610b5684848461061e565b6106a63385858585610efe565b81610b9f5760405162461bcd60e51b815260206004820152600c60248201526b0d2dcecc2d8d2c840d0c2e6d60a31b6044820152606401610643565b60408051808201825292835263ffffffff91821660208085019182525f9586526006905293209151825591516001909101805463ffffffff191691909216179055565b6060610bed82610c53565b505f610c0360408051602081019091525f815290565b90505f815111610c215760405180602001604052805f815250610c4c565b80610c2b84611025565b604051602001610c3c929190611e4c565b6040516020818303038152906040525b9392505050565b5f818152600260205260408120546001600160a01b03168061044857604051637e27328960e01b815260048101849052602401610643565b6108d283838360016110c2565b5f828152600260205260408120546001600160a01b0390811690831615610cc457610cc48184866111f1565b6001600160a01b03811615610cfe57610cdf5f855f5f6110c2565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610d2c576001600160a01b0385165f908152600360205260409020805460010190555b5f84815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f610c4c83836004611255565b5f6104488263ffffffff166004611375565b5f82610dc857610dc55f610da4565b92505b81610dd957610dd65f610da4565b91505b610c4c83835f61142a565b5f610df0848484611525565b949350505050565b5f82610e0a57610e075f610da4565b92505b81610e1b57610e185f610da4565b91505b610c4c83835f6115ce565b5f610e318230611683565b5090565b5f610e408383611683565b5090919050565b61050f828260405180602001604052805f81525061170c565b6001600160a01b038216610e9257604051630b61174360e31b81526001600160a01b0383166004820152602401610643565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156108b157604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610f40908890889087908790600401611e60565b6020604051808303815f875af1925050508015610f7a575060408051601f3d908101601f19168201909252610f7791810190611e96565b60015b610fe1573d808015610fa7576040519150601f19603f3d011682016040523d82523d5f602084013e610fac565b606091505b5080515f03610fd957604051633250574960e11b81526001600160a01b0385166004820152602401610643565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b1461101d57604051633250574960e11b81526001600160a01b0385166004820152602401610643565b505050505050565b60605f61103183611723565b60010190505f8167ffffffffffffffff81111561105057611050611c43565b6040519080825280601f01601f19166020018201604052801561107a576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461108457509392505050565b80806110d657506001600160a01b03821615155b156111b5575f6110e584610c53565b90506001600160a01b038316158015906111115750826001600160a01b0316816001600160a01b031614155b801561114257506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b1561116b5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610643565b81156111b35783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f908152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6111fc838383611804565b6108d2576001600160a01b03831661122a57604051637e27328960e01b815260048101829052602401610643565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610643565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b906112ce908890339089908990600401611ed1565b6020604051808303815f875af11580156112ea573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061130e9190611f07565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015611357575f5ffd5b505af1158015611369573d5f5f3e3d5ffd5b50505050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906113ea9087908790600401611f1e565b6020604051808303815f875af1158015611406573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610df09190611f07565b5f5f821561143d5750600160f81b611440565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163f77f3f1d60e01b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063f77f3f1d906064015b6020604051808303815f875af11580156114f7573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061151b9190611f07565b9695505050505050565b5f807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497006001810154604051637702dcff60e01b81526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303815f875af11580156115a1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115c59190611f07565b95945050505050565b5f5f82156115e15750600160f81b6115e4565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f38906064016114db565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156116f1575f5ffd5b505af1158015611703573d5f5f3e3d5ffd5b50505050505050565b6117168383611884565b6108d2335f858585610efe565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061176b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611797576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117b557662386f26fc10000830492506010015b6305f5e10083106117cd576305f5e100830492506008015b61271083106117e157612710830492506004015b606483106117f3576064830492506002015b600a83106104485760010192915050565b5f6001600160a01b03831615801590610df05750826001600160a01b0316846001600160a01b0316148061185c57506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b80610df05750505f908152600460205260409020546001600160a01b03908116911614919050565b6001600160a01b0382166118ad57604051633250574960e11b81525f6004820152602401610643565b5f6118b983835f610c98565b90506001600160a01b038116156108d2576040516339e3563760e11b81525f6004820152602401610643565b6001600160e01b0319811681146118fa575f5ffd5b50565b5f6020828403121561190d575f5ffd5b8135610c4c816118e5565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610c4c6020830184611918565b5f60208284031215611968575f5ffd5b5035919050565b80356001600160a01b0381168114611985575f5ffd5b919050565b5f5f6040838503121561199b575f5ffd5b6119a48361196f565b946020939093013593505050565b5f5f604083850312156119c3575f5ffd5b50508035926020909101359150565b602080825282518282018190525f918401906040840190835b81811015611a125783516001600160a01b03168352602093840193909201916001016119eb565b509095945050505050565b5f5f5f60608486031215611a2f575f5ffd5b611a388461196f565b9250611a466020850161196f565b929592945050506040919091013590565b5f5f5f5f5f60808688031215611a6b575f5ffd5b853594506020860135935060408601359250606086013567ffffffffffffffff811115611a96575f5ffd5b8601601f81018813611aa6575f5ffd5b803567ffffffffffffffff811115611abc575f5ffd5b886020828401011115611acd575f5ffd5b959894975092955050506020019190565b5f60208284031215611aee575f5ffd5b610c4c8261196f565b803563ffffffff81168114611985575f5ffd5b5f60208284031215611b1a575f5ffd5b610c4c82611af7565b5f5f60408385031215611b34575f5ffd5b611b3d8361196f565b915060208301358015158114611b51575f5ffd5b809150509250929050565b5f5f83601f840112611b6c575f5ffd5b50813567ffffffffffffffff811115611b83575f5ffd5b6020830191508360208260051b8501011115611b9d575f5ffd5b9250929050565b5f5f5f5f5f5f60608789031215611bb9575f5ffd5b863567ffffffffffffffff811115611bcf575f5ffd5b611bdb89828a01611b5c565b909750955050602087013567ffffffffffffffff811115611bfa575f5ffd5b611c0689828a01611b5c565b909550935050604087013567ffffffffffffffff811115611c25575f5ffd5b611c3189828a01611b5c565b979a9699509497509295939492505050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f60808587031215611c6a575f5ffd5b611c738561196f565b9350611c816020860161196f565b925060408501359150606085013567ffffffffffffffff811115611ca3575f5ffd5b8501601f81018713611cb3575f5ffd5b803567ffffffffffffffff811115611ccd57611ccd611c43565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611cfc57611cfc611c43565b604052818152828201602001891015611d13575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f5f5f60608486031215611d46575f5ffd5b8335925060208401359150611d5d60408501611af7565b90509250925092565b5f5f60408385031215611d77575f5ffd5b611d808361196f565b9150611d8e6020840161196f565b90509250929050565b600181811c90821680611dab57607f821691505b602082108103611dc957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561044857610448611dcf565b8181038181111561044857610448611dcf565b634e487b7160e01b5f52603260045260245ffd5b5f60018201611e2e57611e2e611dcf565b5060010190565b5f81518060208401855e5f93019283525090919050565b5f610df0611e5a8386611e35565b84611e35565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f61151b6080830184611918565b5f60208284031215611ea6575f5ffd5b8151610c4c816118e5565b60548110611ecd57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611ef86080830185611918565b90506115c56060830184611eb1565b5f60208284031215611f17575f5ffd5b5051919050565b82815260408101610c4c6020830184611eb156fea164736f6c634300081b000a";

type QuizChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuizChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuizChain__factory extends ContractFactory {
  constructor(...args: QuizChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      QuizChain & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): QuizChain__factory {
    return super.connect(runner) as QuizChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuizChainInterface {
    return new Interface(_abi) as QuizChainInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): QuizChain {
    return new Contract(address, _abi, runner) as unknown as QuizChain;
  }
}
